{"version":3,"sources":["components/Dashboard.js","components/AddPet.js","components/EditPet.js","components/PetDetail.js","components/MainHub.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","state","setPetList","petList","useEffect","axios","get","then","res","data","console","log","catch","err","className","to","scope","sort","a","b","petType","localeCompare","map","pet","i","key","petName","_id","AddPet","errors","submitHandler","changeHandler","onSubmit","style","backgroundColor","width","border","message","type","name","onChange","petDescription","EditPet","id","setPet","setErrors","e","preventDefault","put","navigate","errorResponse","response","errorObj","Object","keys","value","PetDetail","setState","onClick","delete","deleteHandler","petSkill_1","petSkill_2","petSkill_3","MainHub","useState","likes","event","target","path","post","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0fe00cc8.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router'\n\nconst Dashboard = ({state, setPetList, petList}) => {\n\n    \n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/pets/\")\n            .then(res=>{\n                setPetList(res.data)\n                console.log(petList)\n            })  \n            .catch(err=>console.log(err))     \n    }, [state]);\n\n   \n\n    return(\n        <div>\n            <div className=\"d-flex justify-content-between mb-3\">\n                <h1 >Pet Shelter</h1>\n                <Link to=\"/pets/new\">Add a pet to the shelter!</Link>\n            </div>\n            <h2>These pets are looking for a good home</h2>\n            <table className=\"table table-bordered table-striped border border-dark mt-5\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Name:</th>\n                        <th scope=\"col\">Type:</th>\n                        <th scope=\"col\">Actions:</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {petList.sort((a, b) => a.petType.localeCompare(b.petType)),\n                    petList.map((pet, i) => \n                    <tr key={i}>\n                        <td scope=\"row\" className=\"m-2\">{pet.petName}</td>\n                        <td scope=\"row\" className=\"m-2\">{pet.petType}</td>\n                        <td>\n                            <Link className=\"mr-3\" to={`/pets/${pet._id}`}>Details</Link>\n                            |\n                            <Link className=\"ml-3\" to={`/pets/${pet._id}/edit`}>Edit</Link>\n                        </td>\n                    </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default Dashboard","import React from 'react'\nimport { Link } from '@reach/router'\n\nconst AddPet = ({errors, submitHandler, changeHandler, petList}) => {\n    return(\n        <div>\n            <div className=\"d-flex justify-content-between mb-3\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">back to home</Link>\n            </div>\n            <div >\n                <h2 className=\"mb-4\">Know a pet needing a home?</h2>\n                <form onSubmit={submitHandler}>\n                    <div className=\"jumbotron d-flex justify-content-between m-0 p-3\" style={{backgroundColor:\"white\"}}>\n                        <div className=\"card\" style={{width:\"40rem\", border:\"0\"}}>\n                            <div className=\"card-body\">\n                                <h3>Pet Name:</h3>\n                                {(errors.petName) ? <p className=\"text-danger\">{errors.petName.message}</p> : null}\n                                {/* {(name.value in petList) ? <p className=\"text-danger\">Pet Name already exists!</p> : null} */}\n                                <input type=\"text\" name=\"petName\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Pet Type:</h3>\n                                {(errors.petType) ? <p className=\"text-danger\">{errors.petType.message}</p> : null}\n                                <input type=\"text\" name=\"petType\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Pet Description:</h3>\n                                {(errors.petDescription) ? <p className=\"text-danger\">{errors.petDescription.message}</p> : null}\n                                <input type=\"text\" name=\"petDescription\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <button type=\"submit\" className=\"btn btn-primary col-8\"><h5>Add Pet</h5></button>\n                            </div>\n                        </div>\n\n                        <div className=\"card\" style={{width:\"40rem\", border:\"0\"}}>\n                        <div className=\"card-body\">\n                                <h3>Skills (optional):</h3>\n                                <h3 className=\"mt-3\">Skill 1:</h3>\n                                <input type=\"text\" name=\"petSkill_1\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Skill 2:</h3>\n                                <input type=\"text\" name=\"petSkill_2\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Skill 3:</h3>\n                                <input type=\"text\" name=\"petSkill_3\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                            </div>\n                        </div>\n                    \n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default AddPet","import React, { useEffect } from 'react'\nimport { Link, navigate } from '@reach/router'\nimport axios from 'axios'\n\nconst EditPet = ({id, setPet, pet, errors, setErrors, changeHandler}) => {\n\n    const updateHandler = (e) => {\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/pets/edit/${id}`, pet)\n            .then(res=> {\n                navigate(\"/\")\n            })\n            .catch(err=> {\n                const errorResponse = err.response.data.errors;\n                const errorObj = {};\n                for (const key of Object.keys(errorResponse)) { \n                    errorObj[key] = errorResponse[key]\n                }\n                setErrors(errorObj);\n            })\n    }\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(res=>{\n                setPet(res.data)\n            })  \n            .catch(err=>console.log(err))     \n    }, []);\n\n    return(\n        <div>\n            <div className=\"d-flex justify-content-between mb-3\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">back to home</Link>\n            </div>\n            <div >\n                <h2 className=\"mb-4\">{pet.petName}</h2>\n                <form onSubmit={updateHandler}>\n                    <div className=\"jumbotron d-flex justify-content-between m-0 p-3\" style={{backgroundColor:\"white\"}}>\n                        <div className=\"card\" style={{width:\"40rem\", border:\"0\"}}>\n                            <div className=\"card-body\">\n                                <h3>Pet Name:</h3>\n                                {(errors.petName) ? <p className=\"text-danger\">{errors.petName.message}</p> : null}\n                                <input type=\"text\" name=\"petName\" value={pet.petName} className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Pet Type:</h3>\n                                {(errors.petType) ? <p className=\"text-danger\">{errors.petType.message}</p> : null}\n                                <input type=\"text\" name=\"petType\" value={pet.petType} className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Pet Description:</h3>\n                                {(errors.petDescription) ? <p className=\"text-danger\">{errors.petDescription.message}</p> : null}\n                                <input type=\"text\" name=\"petDescription\" value={pet.petDescription} className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <button type=\"submit\" className=\"btn btn-primary col-8\"><h5>Edit Pet</h5></button>\n                            </div>\n                        </div>\n\n                        <div className=\"card\" style={{width:\"40rem\", border:\"0\"}}>\n                        <div className=\"card-body\">\n                                <h3>Skills (optional):</h3>\n                                <h3 className=\"mt-3\">Skill 1:</h3>\n                                <input type=\"text\" name=\"petSkills\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Skill 2:</h3>\n                                <input type=\"text\" name=\"petSkills\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                                <h3>Skill 3:</h3>\n                                <input type=\"text\" name=\"petSkills\" className=\"form-control checkField mb-5\" onChange={changeHandler} />\n                            </div>\n                        </div>\n                    \n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default EditPet","import React, { useEffect, useState } from 'react'\nimport { Link, navigate } from '@reach/router'\nimport axios from 'axios'\n\nconst PetDetail = ({ id, pet, setPet, state, setState}) => {\n\n    // const moreLikes = (e) => {\n    //     e.preventDefault()\n    //     axios.put(`http://localhost:8000/api/pets/edit/${id}`, pet)\n    //         .then(res=>console.log(res))\n    //         .catch(err=>console.log(err))\n    // }\n    // const [ likes, setLikes ] = useState(0)\n    // const moreLikes = (e) => {\n    //     e.preventDefault()\n    //     setLikes(likes + 1)\n    //     setState(!state)\n    // }\n    \n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(res=>{\n                console.log(res)\n                setPet(res.data)\n            })  \n            .catch(err=>console.log(err))     \n    }, [state]);\n\n    const deleteHandler = (id) => {\n        axios.delete(`http://localhost:8000/api/pets/delete/${id}`)\n            .then(res=> {\n                setState(!state)\n                navigate(\"/\")\n            })\n            .catch(err=> console.log(\"Error: \", err))\n    }\n\n    return(\n        <div>\n            <div className=\"d-flex justify-content-between mb-3\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">back to home</Link>\n            </div>\n            <div >\n                <div className=\"d-flex justify-content-between mb-4\">\n                    <h2>Details about: {pet.petName}</h2>\n                    <button className=\"btn btn-danger col-3\" onClick={()=>deleteHandler(pet._id)}><h5>Adopt {pet.petName}</h5></button>\n                </div>\n                <div className=\"d-flex justify-content-between m-0 p-3\" style={{backgroundColor:\"white\"}}>\n                    <div className=\"card\" style={{width:\"20rem\", border:\"0\"}}>\n                        <div className=\"card-body\">\n                            <h3 className=\"mb-5\">Pet Type:</h3>\n                            <h3 className=\"mb-5\">Description:</h3>\n                            <h3 className=\"mb-5\">Skills:</h3>\n                        </div>\n                    </div>\n                    <div className=\"card\" style={{width:\"55rem\", border:\"0\"}}>\n                        <div className=\"card-body\">\n                            <h3 className=\"mb-5\">{pet.petType}</h3>\n                            <h3 className=\"mb-5\">{pet.petDescription}</h3>\n                            <h3 className=\"mb-2\">{pet.petSkill_1}</h3>\n                            <h3 className=\"mb-2\">{pet.petSkill_2}</h3>\n                            <h3 className=\"mb-2\">{pet.petSkill_3}</h3>\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"d-flex justify-content-center m-3\">\n                    <button type=\"submit\" className=\"btn btn-primary col-3\" onClick={moreLikes}><h5>Like {pet.petName}</h5></button>\n                    <h5>{likes}</h5>\n                </div> */}\n            </div>\n        </div>\n    )\n}\nexport default PetDetail","import React, { useState, Component } from 'react'\nimport axios from 'axios'\nimport { Router, navigate } from '@reach/router' \nimport Dashboard from './Dashboard'\nimport AddPet from './AddPet'\nimport EditPet from './EditPet'\nimport PetDetail from './PetDetail'\n\n\nconst MainHub = () => {\n    \n\n    const [ pet, setPet ] = useState({\n        petName: \"\",\n        petType: \"\",\n        petDescription: \"\",\n        petSkill_1: \"\",\n        petSkill_2: \"\",\n        petSkill_3: \"\",\n        likes: 0\n    })\n\n    const [ petList, setPetList ] = useState([]) \n\n    const [ errors, setErrors ] = useState([])\n\n    const [ state, setState ] = useState(false)\n\n    const changeHandler = event => {\n        setPet ({\n            ...pet,\n            [event.target.name] : event.target.value\n        })\n    }    \n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        axios.post('http://localhost:8000/api/pets/new', pet)\n            .then(res=> { \n                setState(!state)\n                navigate(\"/\")\n            })\n            .catch(err=>{\n                const errorResponse = err.response.data.errors;\n                const errorObj = {};\n                for (const key of Object.keys(errorResponse)) { \n                    errorObj[key] = errorResponse[key]\n                }\n                setErrors(errorObj);\n            })\n    }\n\n    return(\n        <div className=\"container jumbotron\">\n            <Router>\n                <Dashboard path=\"/\" petList={petList} setPetList={setPetList} state={state} />\n                <AddPet path=\"/pets/new\" errors={errors} petList={petList} submitHandler={submitHandler} changeHandler={changeHandler} />\n                <PetDetail path=\"/pets/:id\" pet={pet} setPet={setPet} state={state} setState={setState} />\n                <EditPet path=\"/pets/:id/edit\" setPet={setPet} pet={pet} errors={errors} setErrors={setErrors} changeHandler={changeHandler} />\n            </Router>\n        </div>\n    )\n}\nexport default MainHub","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainHub from './components/MainHub'\n\nfunction App() {\n  return (\n    <div>\n      <MainHub />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}